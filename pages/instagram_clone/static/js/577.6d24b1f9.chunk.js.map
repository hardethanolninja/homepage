{"version":3,"file":"static/js/577.6d24b1f9.chunk.js","mappings":"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","sources":["components/profile/header.js","components/profile/photos.js","components/profile/index.js","pages/profile.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport useUser from '../../hooks/use-user';\r\n\r\nimport { isUserFollowingProfile, toggleFollow } from '../../services/firebase';\r\n\r\nexport default function Header({\r\n  photosCount,\r\n  profile: {\r\n    docId: profileDocId,\r\n    userId: profileUserId,\r\n    fullName,\r\n    followers = [],\r\n    following = [],\r\n    username: profileUsername,\r\n  },\r\n  followerCount,\r\n  setFollowerCount,\r\n}) {\r\n  const { user } = useUser();\r\n  const [isFollowingProfile, setIsFollowingProfile] = useState();\r\n  const activeBtnFollow = user.username && user.username !== profileUsername;\r\n\r\n  const handleToggleFollow = async (e) => {\r\n    e.persist();\r\n\r\n    setFollowerCount(\r\n      isFollowingProfile ? followerCount - 1 : followerCount + 1\r\n    );\r\n\r\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n\r\n    await toggleFollow(\r\n      isFollowingProfile,\r\n      user.docId,\r\n      profileDocId,\r\n      profileUserId,\r\n      user.userId\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n\r\n    const isLoggedInUserFollowingProfile = async () => {\r\n      const isFollowing = await isUserFollowingProfile(\r\n        user.username,\r\n        profileUserId\r\n      );\r\n      setIsFollowingProfile(!!isFollowing);\r\n    };\r\n    if (user.username && profileUserId) {\r\n      isLoggedInUserFollowingProfile();\r\n    }\r\n  }, [user.username, profileUserId]);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\r\n      <div className=\"container flex justify-center\">\r\n        <img\r\n          className=\"rounded-full h-40 w-40 flex\"\r\n          alt={`${profileUsername} profile picture`}\r\n          src={\r\n            profileUsername === 'jon' ||\r\n            profileUsername === 'orwell' ||\r\n            profileUsername === 'dali' ||\r\n            profileUsername === 'raphael' ||\r\n            profileUsername === 'candy'\r\n              ? `./images/avatars/${profileUsername}.jpg`\r\n              : `./images/avatars/default.png`\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"flex items-center justify-center flex-col col-span-2\">\r\n        <div className=\"container flex items-center\">\r\n          <p className=\"text-2xl mr-4\">{profileUsername}</p>\r\n          {activeBtnFollow && (\r\n            <button\r\n              className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n              type=\"button\"\r\n              onClick={handleToggleFollow}\r\n            >\r\n              {isFollowingProfile ? 'Unfollow' : 'Follow'}\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"container flex mt-4\">\r\n          {followers === undefined || following === undefined ? (\r\n            <Skeleton count={1} width={677} height={24} />\r\n          ) : (\r\n            <>\r\n              <p className=\"mr-10\">\r\n                <span className=\"font-bold\">{photosCount} </span>photos\r\n              </p>\r\n              <p className=\"mr-10\">\r\n                <span className=\"font-bold\">{followerCount} </span>\r\n                {followerCount === 1 ? `follower` : `followers`}\r\n              </p>\r\n              <p className=\"mr-10\">\r\n                <span className=\"font-bold\">{following.length} </span>\r\n                following\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"container mt-4\">\r\n          <p className=\"font-medium\">\r\n            {!fullName ? <Skeleton count={1} height={24} /> : fullName}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  photosCount: PropTypes.number.isRequired,\r\n  followerCount: PropTypes.number.isRequired,\r\n  setFollowerCount: PropTypes.func.isRequired,\r\n  profile: PropTypes.shape({\r\n    docId: PropTypes.string,\r\n    userId: PropTypes.string,\r\n    fullName: PropTypes.string,\r\n    following: PropTypes.array,\r\n    followers: PropTypes.array,\r\n    username: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { HeartIcon, ChatIcon } from '@heroicons/react/outline';\r\n\r\nexport default function Photos({ photos }) {\r\n  console.log('photos', photos);\r\n  return (\r\n    <div className=\"h-16 border-t border-gray-primary mt-12 pt-4\">\r\n      <div className=\"grid grid-cols-3 gap-8 mt-4 mb-12\">\r\n        {!photos ? (\r\n          <>\r\n            <Skeleton count={12} width={320} height={400} />\r\n          </>\r\n        ) : photos.length > 0 ? (\r\n          photos.map((photo) => (\r\n            <div key={photo.docId} className=\"relative group\">\r\n              <img\r\n                src={photo.imageSrc}\r\n                alt={photo.caption}\r\n                className=\"h-full object-cover\"\r\n              />\r\n              <div className=\" hover:opacity-100 opacity-0 absolute bottom-0 left-0 bg-gray-200 z-10 w-full justify-evenly items-center h-full bg-black-faded\">\r\n                <div className=\" flex flex-col align-start w-full h-full\">\r\n                  <p className=\" flex mt-2 ml-2 text-white font-bold\">\r\n                    <HeartIcon className=\" h-6 w-6 mr-1 fill-white\" />\r\n                    {photo.likes.length}\r\n                  </p>\r\n                  <p className=\"flex mt-2 ml-2 text-white font-bold\">\r\n                    <ChatIcon className=\" h-6 w-6 mr-1 fill-white\" />\r\n                    {photo.comments.length}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : null}\r\n      </div>\r\n      {!photos ||\r\n        (photos.length === 0 && (\r\n          <p className=\"text-center text-2xl\">No Posts Yet</p>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotos.propTypes = {\r\n  photos: PropTypes.array.isRequired,\r\n};\r\n","import { useReducer, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from './header';\r\nimport Photos from './photos';\r\nimport {\r\n  getUserByUsername,\r\n  getUserPhotosByUsername,\r\n} from '../../services/firebase';\r\n\r\nexport default function Profile({ user }) {\r\n  //   const reducer = (state, newState) => ({ ...state, ...newState });\r\n  //   const initialState = {\r\n  //     profile: {},\r\n  //     photosCollection: [],\r\n  //     followerCount: 0,\r\n  //   };\r\n\r\n  //   const [{ profile, photosCollection, followerCount }, dispatch] = useReducer(\r\n  //     reducer,\r\n  //     initialState\r\n  //   );\r\n\r\n  const [profile, setProfile] = useState({});\r\n  const [photosCollection, setPhotosCollection] = useState([]);\r\n  const [followerCount, setFollowerCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function getProfileInfoAndPhotos() {\r\n      const photos = await getUserPhotosByUsername(user.username);\r\n      //   dispatch({\r\n      //     profile: user,\r\n      //     photosCollection: photos,\r\n      //     followerCount: user.followers.length,\r\n      //   });\r\n      setProfile(user);\r\n      setPhotosCollection(photos);\r\n      setFollowerCount(user.followers.length);\r\n      console.log('initial follower count', followerCount);\r\n    }\r\n\r\n    if (user.username) {\r\n      getProfileInfoAndPhotos();\r\n    }\r\n  }, [user.username]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        photosCount={photosCollection ? photosCollection.length : 0}\r\n        profile={profile}\r\n        followerCount={followerCount}\r\n        setFollowerCount={setFollowerCount}\r\n      />\r\n      <Photos photos={photosCollection} />\r\n    </>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    dateCreated: PropTypes.number.isRequired,\r\n    emailAddress: PropTypes.string.isRequired,\r\n    followers: PropTypes.array.isRequired,\r\n    following: PropTypes.array.isRequired,\r\n    fullName: PropTypes.string.isRequired,\r\n    userId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import { useParams, useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nimport Header from '../components/header';\r\nimport UserProfile from '../components/profile';\r\n\r\nimport { getUserByUsername } from '../services/firebase';\r\n\r\nexport default function Profile() {\r\n  const { username } = useParams();\r\n  const [userExists, setUserExists] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function checkUserExists() {\r\n      const [user] = await getUserByUsername(username);\r\n      if (user.userId) {\r\n        setUser(user);\r\n        setUserExists(true);\r\n      } else {\r\n        navigate(ROUTES.NOT_FOUND);\r\n      }\r\n    }\r\n    checkUserExists();\r\n  }, [username, navigate]);\r\n\r\n  return userExists ? (\r\n    <div className=\"bg-gray-background\">\r\n      <Header />\r\n      <div className=\"mx-auto max-w-screen-lg\">\r\n        <UserProfile user={user} />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n"],"names":["Header","photosCount","profile","profileDocId","docId","profileUserId","userId","fullName","followers","following","profileUsername","username","followerCount","setFollowerCount","user","useUser","useState","isFollowingProfile","setIsFollowingProfile","activeBtnFollow","handleToggleFollow","e","persist","toggleFollow","useEffect","isLoggedInUserFollowingProfile","isUserFollowingProfile","isFollowing","className","alt","src","type","onClick","undefined","count","width","height","length","Photos","photos","console","log","map","photo","imageSrc","caption","HeartIcon","likes","ChatIcon","comments","Profile","setProfile","photosCollection","setPhotosCollection","getUserPhotosByUsername","getProfileInfoAndPhotos","useParams","userExists","setUserExists","setUser","navigate","useNavigate","getUserByUsername","ROUTES","checkUserExists"],"sourceRoot":""}